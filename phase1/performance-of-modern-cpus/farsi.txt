قدرت پردازنده‌های مدرن

به شما دنباله‌ی
A = [a_1, a_2, a_3, ..., a_n]
داده می‌شود. شما باید q عملیات روی آن انجام دهید.
هر عملیات یکی از انواع زیر است:
نوع 1:
	به شما سه عدد l و r و x داده می‌شود. انجام دهید:
	a_i := (a_i + x) % 65536 (for l <= i <= r)
نوع 2:
	به شما سه عدد l و r و x داده می‌شود. انجام دهید:
	a_i := a_i bitwise xor x (for l <= i <= r)
نوع 3:
	به شما دو عدد l و r داده می‌شود. به دست آورید:
	min(a_i) for l <= i <= r

نکته: با این که هر راه‌حل درستی پذیرفته می‌شود، هدف این مسئله طراحی راه‌حلی با
پیچیدگی زمانی O(nq) است که به اندازه‌ای سریع باشد که در محدودیت زمانی بگنجد.
پیشنهاد می‌شود که به vector extension های intel نگاهی بیندازید.


ورودی:
خط اول شامل n است
خط دوم شامل n عدد است:
a_1, a_2, ..., a_n
خط سوم شامل q است.
در هر یک از q خط بعدی توضیحات یک عملیات آمده است:
	اگر عملیات از نوع 1 باشد، خط شامل چهار عدد است:
	1 l r x
	اگر عملیات از نوع 2 باشد، خط شامل چهار عدد است:
	2 l r x
	اگر عملیات از نوع 3 باشد، خط شامل سه عدد است:
	3 l r


خروجی:
برای هر عملیات نوع 3، مقدار حساب شده را در یک خط چاپ کنید.


محدودیت ها:
16 <= n <= 100,000
1 <= q <= 100,000
0 <= a_i, x <= 65535
1 <= l <= r <= n
طول بازه‌ی یک عملیت (r - l + 1) مضرب ۱۶ است.


ورودی نمونه:
```
16
1 1 1 1 2 2 2 2 4 4 4 4 8 8 8 8
3
1 1 16 2
2 1 16 8
3 1 16
```

خروجی نمونه:
```
2
```